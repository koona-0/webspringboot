spring.application.name=kr.co.koo

#Server
server.port=8080
server.servlet.encoding.force-response=true
server.servlet.encoding.charset=utf-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

#코드 수정시 자동으로 재실행 
spring.devtools.restart.enabled=true

#Session 기본 세션유지시간인 30분을 다른 시간으로 세팅
#1 = 1초 / 1800 = 30분 
spring.session.timeout=600
server.servlet.session.timeout=600

#file I/O
#파일 첨부 기능을 사용
spring.servlet.multipart.enabled=true
#파일 한개의 최대 사이즈 
spring.servlet.multipart.max-file-size=100MB
#파일 여러개의 합계 사이즈 
spring.servlet.multipart.max-request-size=1000MB

#View
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp

#Mybatis 
	#패키지명 설정 : 패키지가 추가되면 ,를 이용하여 덧붙임
mybatis.type-aliases-package=kr.co.koo
	#mapper 설정
mybatis.mapper-locations=classpath:/mapper/*.xml
#mybatis.mapper-locations=classpath:/*/*.xml	이렇게해도됨 맵퍼 다 쪼개서 쓸때 사용

#Oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@172.30.1.53:1521:1521/xepdb1
spring.datasource.username=APINK
spring.datasource.password=a123456

#MySQL
#같은 이름은 쓸 수 없음 앞에 뭐시기- 붙여서 사용 => 다중 데이터베이스 연결
#spring.second-datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.second-datasource.url=jdbc:mysql://localhost:3306/mrp
#spring.second-datasource.username=project
#spring.second-datasource.password=a123456

#hikari : Spring-boot에 고성능 Database를 연결할 수 있도록 적용하는 라이브러리 
#hikariCP 정식명칭 => Spring에서는 pom.xml에 라이브러리 설치해야만 사용가능함 
#spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/mrp
#spring.datasource.hikari.username=project
#spring.datasource.hikari.password=a123456







